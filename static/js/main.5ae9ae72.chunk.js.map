{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/Preloader.svg","api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/login/Login.jsx","redux/app-reducer.js","hoc/withSuspense.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/common/preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","active","News","props","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","alt","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","usersAPI","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Input","error","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","withRouter","app","promise","Promise","all","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"+JAEIA,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,WAElBC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,gBACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,QAkBZC,EAAqB,SAACC,GAAD,MAAqB,CAACC,KAlCnC,eAkCuDD,mBAE7DE,IAfQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAvBa,eAwBT,IAAII,EAAOD,EAAOJ,eAClB,OAAO,2BACAG,GADP,IAEIN,SAAS,GAAD,mBAAMM,EAAMN,UAAZ,CAAsB,CAACF,GAAI,EAAGG,QAASO,OAEvD,QACI,OAAOF,K,oBC7BnBG,EAAOC,QAAU,CAAC,UAAY,2B,oBCD9BD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,gCCA3C,mHAGMC,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAKNC,EAAU,CACnBC,SADmB,WACuB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,OAPmB,SAOZC,GACH,OAAOd,EAASe,KAAT,iBAAwBD,KAEnCE,SAVmB,SAUVF,GACL,OAAOd,EAASiB,OAAT,iBAA0BH,KAErCI,WAbmB,SAaRJ,GAEP,OADAK,QAAQC,KAAK,8CACNC,EAAWH,WAAWJ,KAIxBO,EAAa,CACtBH,WADsB,SACXJ,GACP,OAAOd,EAASS,IAAI,WAAaK,IAErCQ,UAJsB,SAIZR,GACN,OAAOd,EAASS,IAAI,kBAAoBK,IAE5CS,aAPsB,SAOTC,GACT,OAAOxB,EAASyB,IAAT,iBAA+B,CAACD,OAAQA,MAI1CE,EAAU,CACpBC,GADoB,WAEhB,OAAO3B,EAASS,IAAT,YAEVmB,MAJmB,SAIbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACxC,OAAO/B,EAASe,KAAT,aAA4B,CAACc,QAAOC,WAAUC,gBAEzDC,OAPoB,WAQhB,OAAOhC,EAASiB,OAAT,iB,mBClDdnB,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,4LCW7DkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gHCWSC,MAzBf,WACI,OACI,yBAAKC,UAAWC,IAAEC,KACd,yBAAKF,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,QAA1C,YAEJ,yBAAKN,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,QAA1C,aAEJ,yBAAKN,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,QAAxC,UAEJ,yBAAKN,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBJ,IAAEK,QAAvC,SAEJ,yBAAKN,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,QAAxC,UAEJ,yBAAKN,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBJ,IAAEK,QAA3C,eCXDC,G,OATF,SAACC,GACV,OACI,uCCOOC,G,OATD,SAACD,GACX,OACI,wCCOOE,G,OATE,SAACF,GACd,OACI,2C,uDCLKG,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCMXvE,EAAe,CACfwE,MAAO,GACPjD,SAAU,GACVkD,gBAAiB,EACjBnD,YAAa,EACboD,YAAY,EACZC,oBAAqB,IAwCZC,EAAgB,SAAC/C,GAAD,MAAa,CAACrB,KAtD5B,SAsD0CqB,WAC5CgD,EAAkB,SAAChD,GAAD,MAAa,CAACrB,KAtD5B,WAsD4CqB,WAEhDiD,EAAiB,SAACxD,GAAD,MAAkB,CAACd,KAtDxB,mBAsDgDc,gBAE5DyD,EAAmB,SAACL,GAAD,MAAiB,CAAClE,KAtDvB,qBAsDiDkE,eAC/DM,EAA0B,SAACN,EAAY7C,GAAb,MAAyB,CAC5DrB,KAvDiC,+BAwDjCkE,aACA7C,WAcEoD,EAAkB,uCAAG,WAAOC,EAAUrD,EAAQsD,EAAWC,GAApC,SAAAC,EAAA,6DACvBH,EAASF,GAAwB,EAAMnD,IADhB,SAEFsD,EAAUtD,GAFR,OAGU,IAHV,OAGVF,KAAK2D,YACdJ,EAASE,EAAcvD,IAE3BqD,EAASF,GAAwB,EAAOnD,IANjB,2CAAH,4DAqBT0D,EAjFM,WAAmC,IAAlC7E,EAAiC,uDAAzBV,EAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACX,IAnBO,SAoBH,OAAO,2BACAE,GADP,IAEI8D,MAAOP,EAAoBvD,EAAM8D,MAAO7D,EAAOkB,OAAQ,KAAM,CAAC2D,UAAU,MAEhF,IAvBS,WAwBL,OAAO,2BACA9E,GADP,IAEI8D,MAAOP,EAAoBvD,EAAM8D,MAAO7D,EAAOkB,OAAQ,KAAM,CAAC2D,UAAU,MAEhF,IA3BU,YA4BN,OAAO,2BAAI9E,GAAX,IAAkB8D,MAAO7D,EAAO6D,QAEpC,IA7BiB,mBA8Bb,OAAO,2BAAI9D,GAAX,IAAkBY,YAAaX,EAAOW,cAE1C,IA/BsB,wBAgClB,OAAO,2BAAIZ,GAAX,IAAkB+D,gBAAiB9D,EAAO8E,QAE9C,IAjCmB,qBAkCf,OAAO,2BAAI/E,GAAX,IAAkBgE,WAAY/D,EAAO+D,aAEzC,IAnC6B,+BAoCzB,OAAO,2BACAhE,GADP,IAEIiE,oBAAqBhE,EAAO+D,WAAP,sBACXhE,EAAMiE,qBADK,CACgBhE,EAAOkB,SACtCnB,EAAMiE,oBAAoBe,QAAO,SAAAxF,GAAE,OAAIA,GAAMS,EAAOkB,YAGlE,QACI,OAAOnB,I,4DCZJiF,EArCC,SAAC,GAKb,IAL4F,IAA9EC,EAA6E,EAA7EA,gBAAiBrE,EAA4D,EAA5DA,SAAUD,EAAkD,EAAlDA,YAAauE,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EAEvFC,EAAaC,KAAKC,KAAKL,EAAkBrE,GAEzC2E,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GATiD,EAUnDQ,mBAAS,GAV0C,mBAUtFC,EAVsF,KAUvEC,EAVuE,KAWvFC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAG7C,OAAO,yBAAKxC,UAAWqD,IAAOC,WACxBL,EAAgB,GAClB,4BAAQM,QAAS,WAAQL,EAAiBD,EAAgB,KAA1D,QAECL,EACIR,QAAO,SAAAoB,GAAC,OAAIA,GAAKL,GAAyBK,GAAGJ,KAC7CpC,KAAI,SAACwC,GACF,OAAO,0BAAMxD,UAAYyD,IAAG,eACvBJ,IAAOK,aAAe1F,IAAgBwF,GACxCH,IAAOM,YACGC,IAAKJ,EACLD,QAAS,SAACM,GACNtB,EAAciB,KACdA,MAEvBT,EAAeE,GACjB,4BAAQM,QAAS,WAAQL,EAAiBD,EAAgB,KAA1D,U,oCCOOa,EArCJ,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAM1C,EAA2C,EAA3CA,oBAAqB5C,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,OAC9C,OACI,6BACQ,8BACI,6BACI,kBAAC,IAAD,CAAS8B,GAAI,YAAc2D,EAAKnH,IAChC,yBAAKoH,IAA0B,MAArBD,EAAKE,OAAOC,MAAgBH,EAAKE,OAAOC,MAAQC,IAAWnE,UAAWqD,IAAOc,UAClFC,IAAI,WAGb,6BACKL,EAAK7B,SACA,4BAAQmC,SAAUhD,EAAoBiD,MAAK,SAAA1H,GAAE,OAAIA,IAAOmH,EAAKnH,MAAM2G,QAAS,WAC1E9E,EAASsF,EAAKnH,MADhB,YAKA,4BAAQyH,SAAUhD,EAAoBiD,MAAK,SAAA1H,GAAE,OAAIA,IAAOmH,EAAKnH,MAAK2G,QAAS,WACzEjF,EAAOyF,EAAKnH,MADd,YAOlB,8BACQ,8BACI,6BAAMmH,EAAKlH,MACX,6BAAMkH,EAAK9E,SAEf,8BACI,6BAAM,yBACN,6BAAM,0BCffsF,EAjBH,SAAC,GAA8E,IAA7EvG,EAA4E,EAA5EA,YAAamD,EAA+D,EAA/DA,gBAAiBlD,EAA8C,EAA9CA,SAAUsE,EAAoC,EAApCA,cAAerB,EAAqB,EAArBA,MAAUV,EAAW,oFACtF,OAAO,6BACH,kBAAC,EAAD,CAAWxC,YAAaA,EAAauE,cAAeA,EACzCD,gBAAiBnB,EAAiBlD,SAAUA,IACvD,6BAEQiD,EAAMF,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAM8C,KAAM9C,EACNI,oBAAqBb,EAAMa,oBAC3BuC,IAAK3C,EAAErE,GACP6B,SAAU+B,EAAM/B,SAChBH,OAAQkC,EAAMlC,e,wBCRtCP,EAAWyG,aAJC,SAACpH,GACtB,OAAOA,EAAMqH,UAAUvD,SAIvB,SAACA,GACD,OAAOA,EAAMkB,QAAO,SAAAnB,GAAC,OAAI,QAGhByD,EAAc,SAACtH,GACxB,OAAOA,EAAMqH,UAAUxG,UAGd0G,EAAqB,SAACvH,GAC/B,OAAOA,EAAMqH,UAAUtD,iBAGdyD,GAAiB,SAACxH,GAC3B,OAAOA,EAAMqH,UAAUzG,aAGd6G,GAAgB,SAACzH,GAC1B,OAAOA,EAAMqH,UAAUrD,YAGd0D,GAAyB,SAAC1H,GACnC,OAAOA,EAAMqH,UAAUpD,qBCZrB0D,G,4MAMFxC,cAAgB,SAACoB,GAAgB,IACtB1F,EAAY,EAAKuC,MAAjBvC,SACP,EAAKuC,MAAMwE,aAAarB,EAAY1F,I,kEAPnB,IAAD,EACgBgH,KAAKzE,MAA9BxC,EADS,EACTA,YAAaC,EADJ,EACIA,SACpBgH,KAAKzE,MAAMwE,aAAahH,EAAaC,K,+BAUrC,OAAO,oCACFgH,KAAKzE,MAAMY,WAAa,kBAAC8D,EAAA,EAAD,MAAe,KACxC,kBAAC,EAAD,CAAO/D,gBAAiB8D,KAAKzE,MAAMW,gBAC5BlD,SAAUgH,KAAKzE,MAAMvC,SACrBD,YAAaiH,KAAKzE,MAAMxC,YACxBuE,cAAe0C,KAAK1C,cACpBrB,MAAO+D,KAAKzE,MAAMU,MAClB5C,OAAQ2G,KAAKzE,MAAMlC,OACnBG,SAAUwG,KAAKzE,MAAM/B,SACrB4C,oBAAqB4D,KAAKzE,MAAMa,2B,GAtBtB8D,IAAMC,WAwCpBC,eACXC,aAbkB,SAAClI,GACnB,MAAO,CACH8D,MAAOnD,EAASX,GAChBa,SAAUyG,EAAYtH,GACtB+D,gBAAiBwD,EAAmBvH,GACpCY,YAAa4G,GAAexH,GAC5BgE,WAAYyD,GAAczH,GAC1BiE,oBAAqByD,GAAuB1H,MAMvB,CACrBkB,OL+Bc,SAACC,GACnB,8CAAO,WAAOqD,GAAP,SAAAG,EAAA,sDACHJ,EAAmBC,EAAUrD,EAAQgH,IAASjH,OAAOkH,KAAKD,KAAWjE,GADlE,2CAAP,uDKhCY7C,SLqCQ,SAACF,GACrB,8CAAO,WAAOqD,GAAP,SAAAG,EAAA,sDACHJ,EAAmBC,EAAUrD,EAAQgH,IAAS9G,SAAS+G,KAAKD,KAAWhE,GADpE,2CAAP,uDKtCsBC,iBAAgBE,0BAClCsD,aLUoB,SAACS,EAAMxH,GAC/B,8CAAO,WAAO2D,GAAP,eAAAG,EAAA,6DACHH,EAASH,GAAiB,IAC1BG,EAASJ,EAAeiE,IAFrB,SAGc3H,IAAQC,SAAS0H,EAAMxH,GAHrC,OAGCI,EAHD,OAIHuD,EAASH,GAAiB,IAC1BG,EAhB4B,CAAC1E,KAtDnB,YAsDoCgE,MAgB5B7C,EAAKuC,QACvBgB,EAfgD,CAAC1E,KAtD3B,wBAsDwDiF,MAelD9D,EAAKqH,aAN9B,2CAAP,yDKdWL,CAIZN,I,oBC5CYY,OAZf,SAAgBnF,GACZ,OAAO,4BAAQR,UAAWC,KAAE2F,QACxB,yBAAK5B,IAAI,6EAET,yBAAKhE,UAAWC,KAAE4F,YACbrF,EAAMsF,OACD,6BAAMtF,EAAMnB,MAAZ,MAAqB,4BAAQkE,QAAS/C,EAAMf,QAAvB,YACrB,kBAAC,IAAD,CAASW,GAAI,UAAb,Y,SCRZ2F,GAAgB,qCAGlBrJ,GAAe,CACf6B,OAAQ,KACRe,MAAO,KACPD,MAAO,KACPyG,QAAQ,GAgBCE,GAAkB,SAACzH,EAAQe,EAAOD,EAAOyG,GAAvB,MAAmC,CAC9D5I,KAAM6I,GACNE,QAAS,CAAC1H,SAAQe,QAAOD,QAAOyG,YAEvBI,GAAkB,yDAAM,WAAOtE,GAAP,uBAAAG,EAAA,sEACV5C,IAAQC,KADE,OAEA,KAD3BhB,EAD2B,QAEpBC,KAAK2D,aAAmB,EACR5D,EAASC,KAAKA,KAAlCzB,EAD2B,EAC3BA,GAAIyC,EADuB,EACvBA,MAAOC,EADgB,EAChBA,MAChBsC,EAASoE,GAAgBpJ,EAAI0C,EAAOD,GAAO,KAJd,2CAAN,uDA0BhB8G,GA3CK,WAAmC,IAAlC/I,EAAiC,uDAAzBV,GAAcW,EAAW,uCAClD,OAAQA,EAAOH,MACX,KAAK6I,GACD,OAAO,2BACA3I,GACAC,EAAO4I,SAGlB,QACI,OAAO7I,ICjBbgJ,G,uKAIE,OAAO,kBAAC,GAAWnB,KAAKzE,W,GAJF2E,IAAMC,WAWrBE,gBAJS,SAAClI,GAAD,MAAY,CAChC0I,OAAQ1I,EAAMiJ,KAAKP,OACnBzG,MAAOjC,EAAMiJ,KAAKhH,SAEmB,CAACI,ODiCpB,yDAAM,WAAOmC,GAAP,SAAAG,EAAA,sEACH5C,IAAQM,SADL,OAES,IAFT,OAEXpB,KAAK2D,YACdJ,EAASoE,GAAgB,KAAM,KAAM,MAAM,IAHvB,2CAAN,wDCjCPV,CAAqCc,I,mECmB9CE,GAAiBC,aAAU,CAACC,KAAM,SAAjBD,EA1BL,SAAC/F,GACf,OACI,0BAAMiG,SAAUjG,EAAMkG,cAClB,6BACI,kBAACC,GAAA,EAAD,CAAOC,YAAa,QAAS/J,KAAM,QAASK,KAAM,OAC3C2J,SAAU,CAACC,MACXC,UAAWC,QAEtB,6BACI,kBAACL,GAAA,EAAD,CAAOC,YAAa,WAAY/J,KAAM,WAAYK,KAAM,WACjD2J,SAAU,CAACC,MACXC,UAAWC,QAEtB,6BACI,kBAACL,GAAA,EAAD,CAAOC,YAAa,WAAYG,UAAWC,KAAOnK,KAAM,aAAcK,KAAM,aADhF,gBAGEsD,EAAMyG,OAAS,yBAAKjH,UAAWkH,KAAMC,kBAClC3G,EAAMyG,OAEX,6BACI,8CA0BD3B,gBAHS,SAAClI,GAAD,MAAY,CAChC0I,OAAQ1I,EAAMiJ,KAAKP,UAEiB,CAACzG,MFhBpB,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAOoC,GAAP,iBAAAG,EAAA,sEAC7B5C,IAAQE,MAAMC,EAAOC,EAAUC,GADF,OAEjB,KAD7BpB,EAD8C,QAErCC,KAAK2D,WACdJ,EAASsE,OAELnJ,EAAUqB,EAASC,KAAKvB,SAASsK,OAAS,EAAIhJ,EAASC,KAAKvB,SAAS,GAAK,aAC9E8E,EAASyF,aAAW,QAAS,CAACC,OAAQvK,MANQ,2CAAjC,wDEgBNuI,EAlBD,SAAC9E,GAKX,OAAIA,EAAMsF,OACC,kBAAC,KAAD,CAAU1F,GAAI,aAGlB,6BACH,qCACA,kBAACkG,GAAD,CAAgBG,SAVH,SAACc,GACd/G,EAAMnB,MAAMkI,EAASjI,MAAOiI,EAAShI,SAAUgI,EAAS/H,mBClC5D9C,GAAe,CACf8K,aAAa,GA0BFC,GAvBI,WAAmC,IAAlCrK,EAAiC,uDAAzBV,GAAcW,EAAW,uCACjD,OAAQA,EAAOH,MACX,IAToB,sBAUhB,OAAO,2BACAE,GADP,IAEIoK,aAAa,IAGrB,QACI,OAAOpK,ICdNsK,GAAe,SAACtC,GAGzB,OAAO,SAAC5E,GACJ,OAAO,kBAAC,WAAD,CAAUmH,SAAU,kBAACzC,EAAA,EAAD,OACvB,kBAACE,EAAc5E,MCQrBoH,GAAmBzC,IAAM0C,MAAK,kBAAM,iCACpCC,GAAmB3C,IAAM0C,MAAK,kBAAM,iCAIpCE,G,kLAEE9C,KAAKzE,MAAMwH,kB,+BAIX,OAAK/C,KAAKzE,MAAMgH,YAKZ,yBAAKxH,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,KAAD,CAAOiI,KAAK,WAAWC,OAAQR,GAAaE,MAC5C,kBAAC,KAAD,CAAOK,KAAK,oBAAoBC,OAAQR,GAAaI,MACrD,kBAAC,KAAD,CAAOG,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,KAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,KAAD,CAAOD,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAD,SAClC,kBAAC,KAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,KAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,WAdvC,kBAAChD,EAAA,EAAD,U,GAPDE,aAiCHC,eACX8C,KACA7C,aANoB,SAAClI,GAAD,MAAY,CAChCoK,YAAapK,EAAMgL,IAAIZ,eAKE,CAACQ,cFjCD,kBAAM,SAACpG,GAChC,IAAIyG,EAAUzG,EAASsE,MACvBoC,QAAQC,IAAI,CAACF,IACRlK,MAAK,WACFyD,EAN6B,CAAC1E,KApBd,+BEqDbmI,CAEgC0C,I,mBCzD3CrL,GAAe,GAOJ8L,GALQ,WAAmC,IAAlCpL,EAAiC,uDAAzBV,GAE5B,OAAOU,G,oBCMPqL,GAAWC,YAAgB,CAC3BC,YAAaC,KACbC,YAAa1L,KACb2L,QAASN,GACT/D,UAAWxC,EACXoE,KAAMF,GACNK,KAAMuC,KACNX,IAAKX,KAGLuB,GAAQC,YAAYR,GAAUS,YAAgBC,OAElDxJ,OAAOqJ,MAAQA,GAEAA,UCdXI,IAASlB,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUc,MAAOA,IACb,kBAAC,GAAD,QAGRK,SAASC,eAAe,SrBmH1B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtL,MAAK,SAAAuL,GACJA,EAAaC,gBAEdC,OAAM,SAAA3C,GACLrI,QAAQqI,MAAMA,EAAMlK,a,sEsBhIbmI,IANC,SAAC1E,GACb,OAAO,6BACH,yBAAKwD,IAAK6F,IAAWzF,IAAI,iB,mBCJjC7G,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iJCErHsM,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAAShD,EAAsB,EAAtBA,MAAQiD,EAAc,EAAdA,SAC3CC,EAAWF,GAAWhD,EAC5B,OACI,yBAAKjH,UAAWqD,IAAO+G,YAAc,KAAOD,EAAW9G,IAAO4D,MAAQ,KAClE,6BACKiD,GAEJC,GAAY,8BAAOlD,KAKnBoD,EAAW,SAAC7J,GAAW,IACzBuJ,EAAoCvJ,EAApCuJ,MAAuBO,GAAa9J,EAA7BwJ,KAA6BxJ,EAAvB+J,MADW,YACY/J,EADZ,2BAE/B,OAAO,kBAACsJ,EAAgBtJ,EAAO,8CAAcuJ,EAAWO,MAG/CtD,EAAQ,SAACxG,GAAW,IACtBuJ,EAAoCvJ,EAApCuJ,MAAuBO,GAAa9J,EAA7BwJ,KAA6BxJ,EAAvB+J,MADQ,YACe/J,EADf,2BAE5B,OAAO,kBAACsJ,EAAgBtJ,EAAO,2CAAWuJ,EAAWO,O,mBCrBzD/M,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,kC,gCCDrH,oEAAO,IAAMsJ,EAAW,SAAA0D,GACpB,IAAIA,EACJ,MAAO,qBAIEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMpD,OAASsD,EAAY,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCNnCnN,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,2NCM3Dd,EAAe,CACfiO,MAAO,CACH,CAAC/N,GAAI,EAAGG,QAAS,mBAAoB6N,WAAY,IACjD,CAAChO,GAAI,EAAGG,QAAS,sBAAuB6N,WAAY,KAExDC,QAAS,KACT5L,OAAQ,IAmCC6L,EAAuB,SAACC,GAAD,MAAkB,CAAC7N,KA9CtC,aAgDJ8N,EAAY,SAAC/L,GAAD,MAAa,CAAC/B,KA9CpB,aA8CsC+B,WAG5CgM,EAAiB,SAAC1M,GAAD,8CAAY,WAAOqD,GAAP,eAAAG,EAAA,sEACfwD,IAAS5G,WAAWJ,GADL,OAChCH,EADgC,OAEtCwD,EANwC,CAAC1E,KA9CpB,mBA8C4C2N,QAMzCzM,EAASC,OAFK,2CAAZ,uDAMjBU,EAAY,SAACR,GAAD,8CAAY,WAAOqD,GAAP,eAAAG,EAAA,sEACVjD,IAAWC,UAAUR,GADX,OAC3BH,EAD2B,OAEzBwD,EAASoJ,EAAU5M,EAASC,OAFH,2CAAZ,uDAKZW,EAAe,SAACC,GAAD,8CAAY,WAAO2C,GAAP,SAAAG,EAAA,sEACbjD,IAAWE,aAAaC,GADX,OAEK,IAFL,OAEfZ,KAAK2D,YACdJ,EAASoJ,EAAU/L,IAHK,2CAAZ,uDAOb2J,IAvDQ,WAAmC,IAAlCxL,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAhBS,WAiBL,IAAIgO,EAAU,CACVtO,GAAI,EACJG,QAASM,EAAO0N,YAChBH,WAAY,GAEhB,OAAO,2BACAxN,GADP,IAEIuN,MAAM,GAAD,mBAAMvN,EAAMuN,OAAZ,CAAmBO,IACxBH,YAAa,KAGrB,IA1BW,aA2BP,OAAO,2BACA3N,GADP,IAEI6B,OAAQ5B,EAAO4B,SAGvB,IAjCiB,mBAkCb,OAAO,2BAAI7B,GAAX,IAAkByN,QAASxN,EAAOwN,UAGtC,IAnCY,cAoCR,OAAO,2BAAIzN,GAAX,IAAkBuN,MAAOvN,EAAMuN,MAAMvI,QAAO,SAAAoB,GAAC,OAAIA,EAAE5G,IAAMS,EAAO8N,YAEpE,QACI,OAAO/N,M","file":"static/js/main.5ae9ae72.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Vanya'},\r\n        {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Nikita'},\r\n        {id: 4, name: 'Victor'},\r\n        {id: 5, name: 'Andrey'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__257Vv\"};","module.exports = __webpack_public_path__ + \"static/media/user.385e1427.png\";","module.exports = __webpack_public_path__ + \"static/media/Preloader.f4d7875d.svg\";","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"c6faaead-63cd-45b2-b791-13a678c84f6f\"\r\n    }\r\n});\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n   me() {\r\n       return instance.get(`auth/me`);\r\n   },\r\n    login(email, password, rememberMe = false) {\r\n       return instance.post(`auth/login`, {email, password, rememberMe});\r\n   },\r\n   logout() {\r\n       return instance.delete(`auth/login`);\r\n   }\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__17qw9\",\"item\":\"Navbar_item__X2LE1\",\"active\":\"Navbar_active__1JHrE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/News\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {userAPI as usersAPI, userAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await userAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={\"/Profile/\" + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}\r\n                             alt=\"user\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id )} onClick={() => {\r\n                                unfollow(user.id);\r\n\r\n\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                follow(user.id);\r\n\r\n                            }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleFollowingProgress,\r\n        requestUsers: requestUsers})\r\n) (UsersContainer)\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n    return <header className={s.header}>\r\n        <img src=\"https://im0-tub-ru.yandex.net/i?id=b62f41f00ecbd9afaee942529b76a186&n=13\"/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} type={\"text\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login}) (Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    };\r\n}","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/login/Login\";\nimport {connect} from \"react-redux\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path=\"/Dialogs\" render={withSuspense(DialogsContainer)}/>\n                    <Route path=\"/Profile/:userId?\" render={withSuspense(ProfileContainer)}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <LoginPage/>}/>\n                    <Route path=\"/News\" render={() => <News/>}/>\n                    <Route path=\"/Music\" render={() => <Music/>}/>\n                    <Route path=\"/Settings\" render={() => <Settings/>}/>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\"\n\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import preloader from \"../../../assets/images/Preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3jAhc\",\"error\":\"FormsControls_error__OeAsa\",\"formSummaryError\":\"FormsControls_formSummaryError__1TZV3\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__uJRHS\",\"pageNumber\":\"Paginator_pageNumber__yOj7y\",\"selectedPage\":\"Paginator_selectedPage__3ZxOe\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength)  return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3UDzE\",\"loginBlock\":\"Header_loginBlock__LzkuO\"};","import {profileAPI, userAPI as usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It is my first post', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n            dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}